//
//  iPadGameViewController.m
//  iPadG
//
//  Created by Deniz Aydemir on 3/1/13.
//  Copyright (c) 2013 Deniz Aydemir. All rights reserved.
//

#import "iPadGameViewController.h"
#import <QuartzCore/QuartzCore.h>
#import "Specs.h"
#import "GameplayViewController.h"
#import "AVFoundation/AVFoundation.h"
#import "SoundEffects.h"

@interface iPadGameViewController ()

@end

@implementation iPadGameViewController


@synthesize NumPlayersLabel = _NumPlayersLabel;
@synthesize GameTypeLabel = _GameTypeLabel;
@synthesize GameDifficultyLabel = _GameDifficultyLabel;
@synthesize TimerLabel = _TimerLabel;
@synthesize EasyButton;
@synthesize MediumButton;
@synthesize HardButton;
@synthesize MathButton;
@synthesize WordToSoundButton;
@synthesize WordToWordButton;
@synthesize SoundToSoundButton;
@synthesize gameTypeControl;

Specs *gameSpecs = nil;



-(void)awakeFromNib
{
    
    
    
    NSLog(@"INITIALIZATION");
    
    NSString *soundFilePath = [[NSBundle mainBundle] pathForResource:@"JazzyElevatorMusic" ofType:@"mp3"];
    NSURL *soundFileURL = [NSURL fileURLWithPath:soundFilePath];
    AVAudioPlayer *player = [[AVAudioPlayer alloc] initWithContentsOfURL:soundFileURL error:nil];
    player.numberOfLoops = -1; //infinite
    
    [player play];
    
    
    
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    NSLog(@"VIEW DID LOAD");
    

    SoundEffects *se = [[SoundEffects alloc] initWithSoundNamed:@"Buzzer.aiff"];
    [se play];
    
    if([gameSpecs multiplayer]) {
        _NumPlayersLabel.text = @"2";
        //NSLog(@"CHECKED MULTI");
    }
    else {
        _NumPlayersLabel.text = @"1";
    }
    
    if([gameSpecs timed]) {
        _TimerLabel.text = @"Yes";
    }
    else {
        _TimerLabel.text = @"No";
    }
    
    GameType gt = [gameSpecs gameType];
    
    if(gt == kWordToWord) {
        _GameTypeLabel.text = @"Word To Word"; }
    else if (gt == kWordToSound) {
        _GameTypeLabel.text  = @"Word to Sound"; }
    else if (gt == kSoundToSound){
        _GameTypeLabel.text = @"Sound to Sound"; }
    else {
        _GameTypeLabel.text = @"Math"; 
    }
    
    DifficultyLevel dl = [gameSpecs difficultyLevel];
    if(dl == kEasy) {
        _GameDifficultyLabel.text = @"Easy"; }
    else if (dl == kVeryEasy) {
        _GameDifficultyLabel.text  = @"Very Easy"; }
    else if (dl == kMedium) {
        _GameDifficultyLabel.text  = @"Medium"; }
    else if (dl == kHard) {
        _GameDifficultyLabel.text  = @"Hard"; }
    else {
        _GameDifficultyLabel.text = @"Very Hard!"; }
    
    // Do any additional setup after loading the view, typically from a nib.
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

<<<<<<< HEAD



- (IBAction)ChooseSettingsSelected:(id)sender {
    gameSpecs = [[Specs alloc] init];
    NSLog(@"gamespecs init");
    
=======
- (IBAction)BeginPressed:(id)sender {
    gameSpecs = [[Specs alloc] init];
>>>>>>> c085c70950a7cb504790e66469369212d3cad0b9
}

- (IBAction)SinglePlayerPressed:(id)sender {
    [gameSpecs setMultiplayer: false];
    NSLog(@"Multiplayer set to false");
}

- (IBAction)TwoPlayerPressed:(id)sender {
    [gameSpecs setMultiplayer: true];
    NSLog(@"Multiplayer set to true");
}

- (IBAction)TimedPressed:(id)sender {
    [gameSpecs setTimed: true];
    NSLog(@"Timer set to %s", [gameSpecs timed] ? "true" : "false" );
}

- (IBAction)NotTimedPressed:(id)sender {
    [gameSpecs setTimed: false];
    NSLog(@"Timer set to false");
}

- (IBAction)WordToWordPressed:(id)sender {
    [gameSpecs setGameType:kWordToWord];
    NSLog(@"Game Type is Word to Word");
    
    [sender setBackgroundColor:[UIColor grayColor]];
}

- (IBAction)WordToSoundPressed:(id)sender {
    [gameSpecs setGameType:kWordToSound];
    NSLog(@"Game Type is Word to Sound");
}

- (IBAction)SoundToSoundPressed:(id)sender {
    [gameSpecs setGameType:kSoundToSound];
    NSLog(@"Game Type is Sound to Sound");
}

-(IBAction)MathPressed:(id)sender {
    [gameSpecs setGameType:kMath];
    NSLog(@"Game Type is set to Math");
}

- (IBAction)VeryEasyPressed:(id)sender {
    [gameSpecs setDifficultyLevel:kVeryEasy];
    NSLog(@"Difficulty is Very Easy");
}

- (IBAction)EasyPressed:(id)sender {
    [gameSpecs setDifficultyLevel:kEasy];
    NSLog(@"Difficulty is Easy");
}

- (IBAction)MediumPressed:(id)sender {
    [gameSpecs setDifficultyLevel:kMedium];
    NSLog(@"Difficulty is Medium");
}

-(IBAction)HardPressed:(id)sender {
    [gameSpecs setDifficultyLevel:kHard];
    NSLog(@"Difficulty is Hard");
    [sender setBackgroundColor:[UIColor grayColor]];
}

-(IBAction)VeryHardPressed:(id)sender {
    [gameSpecs setDifficultyLevel:kVeryHard];
    NSLog(@"Difficulty is Very Hard");
}

-(void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender { //send specs to gameplayviewcontroller
    if([segue.identifier isEqualToString:@"gameStarts"]){
<<<<<<< HEAD
        /**if(gameSpecs == nil) {
            gameSpecs = [[Specs alloc] init];
            [gameSpecs setDifficultyLevel:kEasy];
            [gameSpecs setGameType:kWordToWord];
            [gameSpecs setMultiplayer:false];
            [gameSpecs setTimed:false];
            NSLog(@"default settings activated");
        }**/
        GameplayViewController  *controller = [segue destinationViewController];
=======
        GameplayViewController *controller = [segue destinationViewController];
>>>>>>> c085c70950a7cb504790e66469369212d3cad0b9
        [controller setGameSpecs:gameSpecs];
        NSLog(@"SEGUE IDENTIFIED");
    }
}

-(IBAction)gameTypeSegmentPressed:(id)sender
{
    [gameSpecs setGameType:gameTypeControl.selectedSegmentIndex];
    NSLog(@"%i", [gameSpecs gameType]);
}

- (IBAction)difficultySegmentPressed:(id)sender {
    [gameSpecs setDifficultyLevel:gameTypeControl.selectedSegmentIndex+1];
}

- (IBAction)submitSettingsPressed:(id)sender {
    
}




@end
